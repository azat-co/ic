
console = { log: print }

// function socket() {
//   var input = ['foo', 'bar', 'baz', null];
//   var output = [];
// 
//   for (var i = 0, len = input.length; i < len; ++i) {
//     out = yield input[i];
//     if (out) output.push(out), --i;
//   }
// 
//   yield output.join(' ');
// }
// 
// var sock = socket();
// var chunk;
// 
// while (chunk = sock.next()) {
//   sock.send(chunk.toUpperCase());
//   sock.send(chunk.toUpperCase());
//   sock.send(chunk.toUpperCase());
// }
// 
// console.log(sock.next());

// generators vs symetric vs asym vs shallow?

function fiber(fn) {
  var g = fn();
  g.next();
  g.next();
}

function sleep(ms) {
  setTimeout(function(){
    yield
  }, ms);
}

fiber(function(){
  console.log('foo');
  yield sleep(1000)
  console.log('bar');
  yield sleep(2000)
  console.log('bar');
})

// fiber(function(){
//   var body = yield get('https://google.com');
//   console.log(body);
// 
//   yield sleep(5);
// 
//   var body = yield get('https://google.com');
//   console.log(body);
// })